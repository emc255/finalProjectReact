{"version":3,"sources":["components/MessageForm.js","components/MessageFilter.js","components/Body.js","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","username","setUserName","className","onSubmit","e","preventDefault","timestamp","Date","addMessage","toLocaleTimeString","toLocaleDateString","type","placeholder","onChange","target","user","map","ele","key","id","name","MessgeFilter","filterByUserName","setUserFilterByUserName","getFilter","filterCheck","Form","getFilterByName","Body","arr","post","filter","sort","a","b","likes","date","filterByName","length","index","src","photo","alt","time","message","data-id","postId","onClick","getLike","dataset","DisplayEmotes","emotes","emote","Emotes","emoteToggle","getEmoticons","getEmoteToggle","getMessageToggle","MessageToggle","messageToggle","reply","getReply","data-name","count","dataId","setDataId","msg","msgId","Reply","counter","App","setPost","setFilter","setFilterByName","input","newPost","parseInt","newMessage","MessageFilter","vote","onOff","userId","emoticons","find","icon","push","newReply","imdex","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c631bc2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction MessageForm(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [username, setUserName] = useState(0);\r\n\r\n  const submit = e => {\r\n    e.preventDefault();\r\n\r\n    const timestamp = new Date();\r\n\r\n    if (value === \"\") {\r\n      return;\r\n    } else {\r\n      props.addMessage(value, username, timestamp.toLocaleTimeString(), timestamp.toLocaleDateString());\r\n\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  const getIndex = e => {\r\n    if (!e.target.value) {\r\n      setUserName(0);\r\n    } else {\r\n      setUserName(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed-container\">\r\n      <div className=\"outer-header\">\r\n        <div className=\"header\">\r\n          <i className=\"fab fa-twitter\"></i>\r\n          <form onSubmit={submit}>\r\n            <input\r\n              className=\"message-input\"\r\n              type=\"text\"\r\n              value={value}\r\n              placeholder=\"message goes here...\"\r\n              onChange={e => setValue(e.target.value)}\r\n            />\r\n            <select className=\"username-select\" onChange={getIndex}>\r\n              {props.user.map(ele => (\r\n                <option key={ele.id} value={ele.id}>\r\n                  {ele.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button className=\"message-btn\">post</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageForm;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction MessgeFilter(props) {\r\n  const [filterByUserName, setUserFilterByUserName] = useState(\"\");\r\n\r\n  const filterChoice = [\r\n    { id: 10, name: \"--------\" },\r\n    { id: 12, name: \"username\" },\r\n    { id: 13, name: \"likes\" },\r\n    { id: 14, name: \"date\" }\r\n  ];\r\n\r\n  const filterCheckUserName = value => {\r\n    if (value === \"username\") {\r\n      props.getFilter(value);\r\n    }\r\n\r\n    setUserFilterByUserName(value);\r\n  };\r\n\r\n  const filterCheck = value => {\r\n    if (value === \"--------\") {\r\n      props.getFilter(value);\r\n      setUserFilterByUserName(\"\");\r\n    } else if (value === \"likes\") {\r\n      props.getFilter(value);\r\n      setUserFilterByUserName(\"\");\r\n    } else if (value === \"date\") {\r\n      props.getFilter(value);\r\n      setUserFilterByUserName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed-container\">\r\n      <div className=\"filter-container\">\r\n        <span>filter by : </span>\r\n\r\n        <select\r\n          onChange={e => {\r\n            e.target.value === \"username\" ? filterCheckUserName(e.target.value) : filterCheck(e.target.value);\r\n          }}\r\n        >\r\n          {filterChoice.map(ele => (\r\n            <option key={ele.id} value={ele.name}>\r\n              {ele.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Form filterByUserName={filterByUserName} user={props.user} getFilterByName={props.getFilterByName} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessgeFilter;\r\n\r\nfunction Form(props) {\r\n  if (props.filterByUserName === \"\") {\r\n    return <div></div>;\r\n  } else {\r\n    return (\r\n      <div className=\"username-filter-select\">\r\n        {\r\n          <select\r\n            onChange={e => {\r\n              props.getFilterByName(e.target.value);\r\n            }}\r\n          >\r\n            {props.user.map(ele => (\r\n              <option key={ele.id} value={ele.name}>\r\n                {ele.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Body(props) {\r\n  let arr = [...props.post];\r\n\r\n  if (props.filter === \"\") {\r\n    arr = [...props.post];\r\n  } else if (props.filter === \"likes\") {\r\n    arr = arr.sort((a, b) => b.likes - a.likes);\r\n  } else if (props.filter === \"date\") {\r\n    arr = arr.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n  }\r\n\r\n  if (props.filterByName.length > 0) {\r\n    arr = [...props.post].filter(ele => ele.name === props.filterByName);\r\n  }\r\n\r\n  if (arr.length > 0) {\r\n    return (\r\n      <div className=\"message-container\">\r\n        {arr.map((ele, index) => (\r\n          <div className=\"message-box\" key={index}>\r\n            <div className=\"user-photo\">\r\n              <img src={ele.photo} alt=\"kitty\" />\r\n            </div>\r\n            <div className=\"message-content-container\">\r\n              <p className=\"line user-name\">{ele.name}</p>\r\n              <p className=\"line date\">{ele.date}</p>\r\n              <span>@</span>\r\n              <p className=\"line time\">{ele.time}</p>\r\n              <p>{ele.message}</p>\r\n              <i className=\"far fa-thumbs-up\" data-id={ele.postId} onClick={e => props.getLike(e.target.dataset.id)}>\r\n                {ele.likes}\r\n              </i>\r\n              <DisplayEmotes emotes={ele.emote} />\r\n              <div>\r\n                <Emotes ele={ele.emoteToggle} id={ele.postId} getEmoticons={props.getEmoticons} />\r\n                <button data-id={ele.postId} onClick={e => props.getEmoteToggle(e.target.dataset.id)}>\r\n                  emotes\r\n                </button>\r\n                <button data-id={ele.postId} onClick={e => props.getMessageToggle(e.target.dataset.id)}>\r\n                  reply\r\n                </button>\r\n                <MessageToggle\r\n                  id={ele.postId}\r\n                  ele={ele.messageToggle}\r\n                  user={props.user}\r\n                  reply={ele.reply}\r\n                  getReply={props.getReply}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\nexport default Body;\r\n\r\nfunction Emotes(props) {\r\n  if (props.ele) {\r\n    return (\r\n      <div>\r\n        <i\r\n          className=\"far fa-smile-beam\"\r\n          data-id={props.id}\r\n          data-name=\"far fa-smile-beam\"\r\n          onClick={e => {\r\n            props.getEmoticons(e.target.dataset.name, e.target.dataset.id);\r\n          }}\r\n        ></i>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nfunction DisplayEmotes(props) {\r\n  if (props.emotes.length > 0) {\r\n    return (\r\n      <div>\r\n        {props.emotes.map((ele, index) => (\r\n          <i key={index} className={ele.name}>\r\n            {ele.count}\r\n          </i>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nfunction MessageToggle(props) {\r\n  const [value, setValue] = useState(\"\");\r\n  const [username, setUserName] = useState(\"euhna\");\r\n  const [dataId, setDataId] = useState(0);\r\n\r\n  const submit = e => {\r\n    e.preventDefault();\r\n\r\n    const timestamp = new Date();\r\n\r\n    if (value === \"\") {\r\n      return;\r\n    } else {\r\n      props.getReply(dataId, value, username, timestamp.toLocaleTimeString(), timestamp.toLocaleDateString());\r\n\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  const getIndex = e => {\r\n    setUserName(e.target.value);\r\n  };\r\n\r\n  const setMsg = (msg, msgId) => {\r\n    setValue(msg);\r\n    setDataId(msgId);\r\n  };\r\n\r\n  if (props.ele) {\r\n    return (\r\n      <div>\r\n        <form onSubmit={submit}>\r\n          <input\r\n            type=\"text\"\r\n            data-id={props.id}\r\n            value={value}\r\n            placeholder=\"reply...\"\r\n            onChange={e => setMsg(e.target.value, e.target.dataset.id)}\r\n          />\r\n          <select onChange={getIndex}>\r\n            {props.user.map(ele => (\r\n              <option key={ele.id} value={ele.name}>\r\n                {ele.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button>reply</button>\r\n        </form>\r\n        <Reply reply={props.reply} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nfunction Reply(props) {\r\n  if (props.reply.length > 0) {\r\n    return (\r\n      <div>\r\n        {props.reply.map((ele, index) => (\r\n          <div key={index}>\r\n            <p>{ele.name}</p>\r\n            <p>{ele.date}</p>\r\n            <p>{ele.time}</p>\r\n            <p>{ele.message}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\nimport MessageForm from \"./components/MessageForm\";\nimport MessageFilter from \"./components/MessageFilter\";\nimport Body from \"./components/Body\";\nimport \"./App.css\";\n\nlet counter = 103;\n\nfunction App() {\n  const [user] = useState([\n    { id: 0, name: \"euhna\", photo: \"http://placekitten.com/g/101/100\" },\n    { id: 1, name: \"sana\", photo: \"http://placekitten.com/g/102/100\" },\n    { id: 2, name: \"sinb\", photo: \"http://placekitten.com/g/103/100\" },\n    { id: 3, name: \"yerin\", photo: \"http://placekitten.com/g/104/100\" },\n    { id: 4, name: \"nayeon\", photo: \"http://placekitten.com/g/105/100?\" }\n  ]);\n\n  const [post, setPost] = useState([\n    {\n      id: 2,\n      name: \"sinb\",\n      photo: \"http://placekitten.com/g/103/100\",\n      message: \"eeeeeeeeeeeeeeeeeeeeeee\",\n      date: \"1/1/2020\",\n      time: \"4:11 pm\",\n      likes: 2,\n      reply: [],\n      messageToggle: false,\n      postId: 100,\n      emote: [],\n      emoteToggle: false\n    },\n    {\n      id: 4,\n      name: \"nayeon\",\n      photo: \"http://placekitten.com/g/105/100\",\n      message: \"nnnnnnnnnnnnnnnnnnnnnnn\",\n      date: \"1/11/2020\",\n      time: \"6:21 pm\",\n      likes: 1,\n      reply: [],\n      messageToggle: false,\n      postId: 101,\n      emote: [],\n      emoteToggle: false\n    },\n    {\n      id: 1,\n      name: \"sana\",\n      photo: \"http://placekitten.com/g/102/100\",\n      message: \"ssssssssssssssssssssss\",\n      date: \"1/6/2020\",\n      time: \"2:11 pm\",\n      likes: 11,\n      reply: [],\n      messageToggle: false,\n      postId: 102,\n      emote: [],\n      emoteToggle: false\n    }\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n  const [filterByName, setFilterByName] = useState(\"\");\n\n  const addMessage = (input, index, time, date) => {\n    let newPost = {};\n\n    user.map(ele => {\n      if (ele.id === parseInt(index)) {\n        newPost = {\n          id: ele.id,\n          name: ele.name,\n          photo: ele.photo,\n          message: input,\n          date: date,\n          time: time,\n          likes: 0,\n          reply: [],\n          messageToggle: false,\n          postId: ++counter,\n          emote: [],\n          emoteToggle: false\n        };\n      }\n\n      return newPost;\n    });\n    let newMessage = [newPost, ...post];\n\n    setPost(newMessage);\n  };\n\n  const getFilter = filter => {\n    if (filter === \"--------\") {\n      setFilter(\"\");\n      setFilterByName(\"\");\n    } else if (filter === \"likes\") {\n      setFilter(\"likes\");\n      setFilterByName(\"\");\n    } else if (filter === \"date\") {\n      setFilter(\"date\");\n      setFilterByName(\"\");\n    } else if (filter === \"username\") {\n      setFilterByName(\"euhna\");\n      setFilter(\"\");\n    }\n  };\n\n  const getFilterByName = filter => {\n    setFilterByName(filter);\n  };\n\n  const getLike = vote => {\n    post.map(ele => {\n      if (ele.postId === parseInt(vote)) {\n        ele.likes += 1;\n      }\n\n      return post;\n    });\n    setPost([...post]);\n  };\n\n  const getEmoteToggle = onOff => {\n    post.map(ele => {\n      if (ele.postId === parseInt(onOff)) {\n        ele.emoteToggle = !ele.emoteToggle;\n      }\n\n      return post;\n    });\n    setPost([...post]);\n  };\n\n  const getEmoticons = (value, userId) => {\n    let emoticons = { name: value, count: 1 };\n\n    post.map(ele => {\n      if (ele.postId === parseInt(userId)) {\n        ele.emote.find(icon => {\n          if (icon.name === value) {\n            icon.count += 1;\n          }\n\n          return ele.emote;\n        });\n        if (ele.emote.length <= 0) {\n          ele.emote.push(emoticons);\n        }\n      }\n\n      return post;\n    });\n\n    setPost([...post]);\n  };\n\n  const getMessageToggle = onOff => {\n    post.map(ele => {\n      if (ele.postId === parseInt(onOff)) {\n        ele.messageToggle = !ele.messageToggle;\n      }\n\n      return post;\n    });\n    setPost([...post]);\n  };\n\n  const getReply = (dataId, value, name, time, date) => {\n    let newReply = {};\n\n    post.map((ele, imdex) => {\n      if (ele.postId === parseInt(dataId)) {\n        newReply = {\n          message: value,\n          name: name,\n          time: time,\n          date: date\n        };\n\n        ele.reply.push(newReply);\n      }\n\n      return post;\n    });\n    setPost([...post]);\n  };\n\n  return (\n    <div className=\"App\">\n      <MessageForm user={user} addMessage={addMessage} />\n      <MessageFilter user={user} getFilter={getFilter} getFilterByName={getFilterByName} />\n      <Body\n        user={user}\n        post={post}\n        filter={filter}\n        filterByName={filterByName}\n        getLike={getLike}\n        getEmoteToggle={getEmoteToggle}\n        getEmoticons={getEmoticons}\n        getMessageToggle={getMessageToggle}\n        getReply={getReply}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}